buildscript {
    ext.kotlin_version = "1.9.21"
    ext.jacocoVersion = '0.8.7'
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
    }
}

plugins {
    id "org.sonarqube" version "3.5.0.2730"
}

sonarqube {
    properties {
        property "sonar.projectKey", "OutSystems_OSInAppBrowserLib-Android"
        property "sonar.organization", "outsystemsrd"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "jacoco"

android {
    namespace "com.outsystems.plugins.inappbrowser.osinappbrowserlib"
    compileSdk 34

    defaultConfig {
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

        reports {
            xml.getRequired().set(true)
            html.getRequired().set(true)
        }

        def fileFilter = ['**/BuildConfig.*', '**/Manifest*.*']
        def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
        def mainSrc = "${project.projectDir}/src/main/kotlin"

        sourceDirectories.setFrom(files([mainSrc]))
        classDirectories.setFrom(files([debugTree]))
        executionData.setFrom(fileTree(dir: "$buildDir", includes: [
                "jacoco/testDebugUnitTest.exec",
                "outputs/code-coverage/connected/*coverage.ec"
        ]))
    }

    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'

    implementation 'androidx.webkit:webkit:1.8.0'

    //gson
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'androidx.test.ext:junit-ktx:1.2.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.12.2'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
